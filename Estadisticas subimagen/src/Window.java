
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.imgcodecs.Imgcodecs;

public class Window extends javax.swing.JFrame {

    JScrollBar scrollBarVertical;
    JScrollBar scrollbarHorizontal;

    JFileChooser fc;
    File file;
    Mat imageArray;
    EstadisticasImagen stats;

    public Window() {

        initComponents();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Archivos de imagen", ImageIO.getReaderFileSuffixes());
        fc.addChoosableFileFilter(filter);
        fc.setAcceptAllFileFilterUsed(true);
        stats = new EstadisticasImagen();
        
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent we) {
                String ObjButtons[] = {"Sí", "No"};
                int result = JOptionPane.showOptionDialog(null,
                        "Seguro que quieres salir de la aplicación?", "Estadísticas de imágenes",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null,
                        ObjButtons, ObjButtons[1]);
                if (result == 0) {
                    System.exit(0);
                }
            }
        });

        scrollBarVertical = canvas1.getVerticalScrollBar();
        scrollbarHorizontal = canvas1.getHorizontalScrollBar();

        scrollBarVertical.addAdjustmentListener(new AdjustmentListener() {
            @Override
            public void adjustmentValueChanged(AdjustmentEvent ae) {
                if (scrollBarVertical.getValueIsAdjusting()) {
                    return;
                }
                refreshStatistics();
            }
        });

        scrollbarHorizontal.addAdjustmentListener(new AdjustmentListener() {
            @Override
            public void adjustmentValueChanged(AdjustmentEvent ae) {
                if (scrollbarHorizontal.getValueIsAdjusting()) {
                    return;
                }
                refreshStatistics();
            }
        });

        canvas1.setHorizontalScrollBarPolicy(HORIZONTAL_SCROLLBAR_AS_NEEDED);
        canvas1.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_AS_NEEDED);
        canvas1.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem4 = new javax.swing.JMenuItem();
        canvas1 = new Canvas();
        StatsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Red = new javax.swing.JLabel();
        RedMax = new javax.swing.JLabel();
        RedMin = new javax.swing.JLabel();
        RedAvg = new javax.swing.JLabel();
        Green = new javax.swing.JLabel();
        GreenMax = new javax.swing.JLabel();
        GreenMin = new javax.swing.JLabel();
        GreenAvg = new javax.swing.JLabel();
        Blue = new javax.swing.JLabel();
        BlueMax = new javax.swing.JLabel();
        BlueMin = new javax.swing.JLabel();
        BlueAvg = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Minimum:");

        jLabel2.setText("Maximum:");

        jLabel3.setText("Promedio:");

        Red.setText("Rojo:");

        RedMax.setText("0");

        RedMin.setText("0");

        RedAvg.setText("0");

        Green.setText("Verde:");

        GreenMax.setText("0");

        GreenMin.setText("0");

        GreenAvg.setText("0");

        Blue.setText("Azul:");

        BlueMax.setText("0");

        BlueMin.setText("0");

        BlueAvg.setText("0");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Estatísticas de colores:");

        javax.swing.GroupLayout StatsPanelLayout = new javax.swing.GroupLayout(StatsPanel);
        StatsPanel.setLayout(StatsPanelLayout);
        StatsPanelLayout.setHorizontalGroup(
            StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StatsPanelLayout.createSequentialGroup()
                        .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(StatsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RedMin))
                            .addGroup(StatsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(RedAvg))
                            .addGroup(StatsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Red)
                                    .addComponent(RedMax))))
                        .addGap(18, 18, 18)
                        .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Green)
                            .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(GreenMin)
                                .addComponent(GreenAvg)
                                .addComponent(GreenMax)))
                        .addGap(26, 26, 26)
                        .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BlueMax)
                                .addComponent(BlueAvg)
                                .addComponent(BlueMin))
                            .addComponent(Blue))
                        .addGap(35, 35, 35))
                    .addGroup(StatsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        StatsPanelLayout.setVerticalGroup(
            StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Red)
                    .addComponent(Green)
                    .addComponent(Blue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(RedMax)
                    .addComponent(GreenMax)
                    .addComponent(BlueMax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(RedMin)
                    .addComponent(GreenMin)
                    .addComponent(BlueMin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StatsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GreenAvg)
                    .addComponent(BlueAvg)
                    .addComponent(RedAvg)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abre un archivo...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(StatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(canvas1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        int returnVal = fc.showOpenDialog(canvas1);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            String filePath = file.getAbsolutePath();
            ImageIcon ii = new ImageIcon(filePath);
            canvas1.setViewportView(new JLabel(ii));
            imageArray = Imgcodecs.imread(filePath);
            refreshStatistics();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Blue;
    private javax.swing.JLabel BlueAvg;
    private javax.swing.JLabel BlueMax;
    private javax.swing.JLabel BlueMin;
    private javax.swing.JLabel Green;
    private javax.swing.JLabel GreenAvg;
    private javax.swing.JLabel GreenMax;
    private javax.swing.JLabel GreenMin;
    private javax.swing.JLabel Red;
    private javax.swing.JLabel RedAvg;
    private javax.swing.JLabel RedMax;
    private javax.swing.JLabel RedMin;
    private javax.swing.JPanel StatsPanel;
    private Canvas canvas1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    // End of variables declaration//GEN-END:variables

    private void refreshStatistics() {
        try {
            stats.calculaEstadisticas(imageArray, 
                    canvas1.getViewport().getViewPosition(), canvas1.getSize());
            BlueAvg.setText(Integer.toString(stats.getPromedio()[0]));
            GreenAvg.setText(Integer.toString(stats.getPromedio()[1]));
            RedAvg.setText(Integer.toString(stats.getPromedio()[2]));
            BlueMin.setText(Integer.toString(stats.getMinimo()[0]));
            GreenMin.setText(Integer.toString(stats.getMinimo()[1]));
            RedMin.setText(Integer.toString(stats.getMinimo()[2]));
            BlueMax.setText(Integer.toString(stats.getMaximo()[0]));
            GreenMax.setText(Integer.toString(stats.getMaximo()[1]));
            RedMax.setText(Integer.toString(stats.getMaximo()[2]));
        } catch (Exception ex) {
        }
    }
}
